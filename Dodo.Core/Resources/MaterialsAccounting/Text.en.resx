<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BasicUnitOfMeasure" xml:space="preserve">
    <value>Basic measurement unit</value>
  </data>
  <data name="BasicUnitOfMeasureShort" xml:space="preserve">
    <value>Base unit</value>
  </data>
  <data name="BeginDateRequired" xml:space="preserve">
    <value>Enter start date</value>
  </data>
  <data name="Bottle" xml:space="preserve">
    <value>Bottle</value>
  </data>
  <data name="Box" xml:space="preserve">
    <value>Box</value>
  </data>
  <data name="Bucket" xml:space="preserve">
    <value>Bucket</value>
  </data>
  <data name="Consumables" xml:space="preserve">
    <value>Expendable supplies</value>
  </data>
  <data name="ConsumptionType_All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="ConsumptionType_Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="ConsumptionType_Defect" xml:space="preserve">
    <value>Defects</value>
  </data>
  <data name="ConsumptionType_PersonalFood" xml:space="preserve">
    <value>Staff meals</value>
  </data>
  <data name="ConsumptionType_Sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="ConsumptionType_Transfers" xml:space="preserve">
    <value>Relocations</value>
  </data>
  <data name="ContainerSize" xml:space="preserve">
    <value>Size of container</value>
  </data>
  <data name="ContainerTypeNone" xml:space="preserve">
    <value>Without packaging</value>
  </data>
  <data name="DebitingReason_Corruption" xml:space="preserve">
    <value>Product spoilage</value>
  </data>
  <data name="DebitingReason_Expired" xml:space="preserve">
    <value>Past expiration date</value>
  </data>
  <data name="DebitingReason_GuiltyPerson" xml:space="preserve">
    <value>Human error</value>
  </data>
  <data name="DebitingReason_MarketingActivities" xml:space="preserve">
    <value>Marketing</value>
  </data>
  <data name="DebitingReason_PackageDamaged" xml:space="preserve">
    <value>Damaged packaging</value>
  </data>
  <data name="DryWeight" xml:space="preserve">
    <value>Dry weight</value>
  </data>
  <data name="EndDateRequired" xml:space="preserve">
    <value>Enter end date</value>
  </data>
  <data name="EveningShift" xml:space="preserve">
    <value>Evening shift</value>
  </data>
  <data name="EveryDay" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="EveryMonth" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="EveryWeek" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Federal" xml:space="preserve">
    <value>Federal</value>
  </data>
  <data name="FieldMustBePositive" xml:space="preserve">
    <value>Number in field {0} must be greater than zero</value>
  </data>
  <data name="FinishedProduct" xml:space="preserve">
    <value>Final products</value>
  </data>
  <data name="ForAllUnits" xml:space="preserve">
    <value>For all units</value>
  </data>
  <data name="FreeTara" xml:space="preserve">
    <value>Free weight</value>
  </data>
  <data name="Gram" xml:space="preserve">
    <value>Gram</value>
  </data>
  <data name="GramShort" xml:space="preserve">
    <value>gr.</value>
  </data>
  <data name="Ingredient" xml:space="preserve">
    <value>Ingredient</value>
  </data>
  <data name="Inventory" xml:space="preserve">
    <value>Smallwares and implements</value>
  </data>
  <data name="Jar" xml:space="preserve">
    <value>Can</value>
  </data>
  <data name="Kilogram" xml:space="preserve">
    <value>Kilograms</value>
  </data>
  <data name="KilogramShort" xml:space="preserve">
    <value>Kg</value>
  </data>
  <data name="Lexan1" xml:space="preserve">
    <value>Lexan 1/1</value>
  </data>
  <data name="Lexan2" xml:space="preserve">
    <value>Lexan 1/2</value>
  </data>
  <data name="Lexan3" xml:space="preserve">
    <value>Lexan 1/3</value>
  </data>
  <data name="Lexan6" xml:space="preserve">
    <value>Lexan 1/6</value>
  </data>
  <data name="Lexan9" xml:space="preserve">
    <value>Lexan 1/9</value>
  </data>
  <data name="Liter" xml:space="preserve">
    <value>Liter</value>
  </data>
  <data name="LiterShort" xml:space="preserve">
    <value>L</value>
  </data>
  <data name="Material_MaterialNameIsRequired" xml:space="preserve">
    <value>Title is missing</value>
  </data>
  <data name="Material_MaterialTypeIsRequired" xml:space="preserve">
    <value>Type of supplies not selected</value>
  </data>
  <data name="MaximumFieldLength" xml:space="preserve">
    <value>Maximum field length is {1}</value>
  </data>
  <data name="MeasureTypeVariation_Breakfast" xml:space="preserve">
    <value>Snack</value>
  </data>
  <data name="MeasureTypeVariation_Glass100Ml" xml:space="preserve">
    <value>Glass 100 ml</value>
  </data>
  <data name="MeasureTypeVariation_Glass100Ml1" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="MeasureTypeVariation_Glass100Ml1_2" xml:space="preserve">
    <value>42737</value>
  </data>
  <data name="MeasureTypeVariation_Glass100Ml1_4" xml:space="preserve">
    <value>42739</value>
  </data>
  <data name="MeasureTypeVariation_Glass100Ml3_4" xml:space="preserve">
    <value>42798</value>
  </data>
  <data name="MeasureTypeVariation_Glass200Ml" xml:space="preserve">
    <value>Glass 200 ml</value>
  </data>
  <data name="MeasureTypeVariation_HalfOfLargeGlass" xml:space="preserve">
    <value>1/2 of a big cup</value>
  </data>
  <data name="MeasureTypeVariation_HalfOfMediumGlass" xml:space="preserve">
    <value>1/2 of a medium cup</value>
  </data>
  <data name="MeasureTypeVariation_HalfOfSmallGlass" xml:space="preserve">
    <value>1/2 of a small cup</value>
  </data>
  <data name="MeasureTypeVariation_HickeyOneHickey" xml:space="preserve">
    <value>One piece</value>
  </data>
  <data name="MeasureTypeVariation_LargeGlass" xml:space="preserve">
    <value>Big cup</value>
  </data>
  <data name="MeasureTypeVariation_MediumGlass" xml:space="preserve">
    <value>Medium cup</value>
  </data>
  <data name="MeasureTypeVariation_PinchOnePinch" xml:space="preserve">
    <value>One pinch</value>
  </data>
  <data name="MeasureTypeVariation_Portion14Pieces" xml:space="preserve">
    <value>Portion of 14 pieces</value>
  </data>
  <data name="MeasureTypeVariation_PortionDoDoMixNugget" xml:space="preserve">
    <value>Portion dodomix</value>
  </data>
  <data name="MeasureTypeVariation_PortionDoDoMixPotatoes" xml:space="preserve">
    <value>Portion dodomix</value>
  </data>
  <data name="MeasureTypeVariation_PortionDrink0_2L" xml:space="preserve">
    <value>0,2 l</value>
  </data>
  <data name="MeasureTypeVariation_PortionDrink0_3L" xml:space="preserve">
    <value>0,3 l</value>
  </data>
  <data name="MeasureTypeVariation_PortionDrink0_5L" xml:space="preserve">
    <value>0,5 l</value>
  </data>
  <data name="MeasureTypeVariation_PortionDrink0_6L" xml:space="preserve">
    <value>0,6 l</value>
  </data>
  <data name="MeasureTypeVariation_PortionForPizza25" xml:space="preserve">
    <value>Pizza 25</value>
  </data>
  <data name="MeasureTypeVariation_PortionForPizza30" xml:space="preserve">
    <value>Pizza 30</value>
  </data>
  <data name="MeasureTypeVariation_PortionForPizza35" xml:space="preserve">
    <value>Pizza 35</value>
  </data>
  <data name="MeasureTypeVariation_PortionForSandwich" xml:space="preserve">
    <value>Sandwich</value>
  </data>
  <data name="MeasureTypeVariation_PortionIceCream" xml:space="preserve">
    <value>Portion of ice-cream</value>
  </data>
  <data name="MeasureTypeVariation_PortionIceCreamOne" xml:space="preserve">
    <value>One serving</value>
  </data>
  <data name="MeasureTypeVariation_PortionOfDrink0_05L" xml:space="preserve">
    <value>0,05 l</value>
  </data>
  <data name="MeasureTypeVariation_PortionSalmonOne" xml:space="preserve">
    <value>One serving</value>
  </data>
  <data name="MeasureTypeVariation_PortionShrimpOne" xml:space="preserve">
    <value>One serving</value>
  </data>
  <data name="MeasureTypeVariation_PortionVillage" xml:space="preserve">
    <value>Country-style serving</value>
  </data>
  <data name="MeasureTypeVariation_PressingGunOnePress" xml:space="preserve">
    <value>One click</value>
  </data>
  <data name="MeasureTypeVariation_ShakeOneShake" xml:space="preserve">
    <value>One shake</value>
  </data>
  <data name="MeasureTypeVariation_Slice" xml:space="preserve">
    <value>Slice</value>
  </data>
  <data name="MeasureTypeVariation_SmallGlass" xml:space="preserve">
    <value>Small cup</value>
  </data>
  <data name="MeasureType_Americano" xml:space="preserve">
    <value>Americano</value>
  </data>
  <data name="MeasureType_Cappuccino" xml:space="preserve">
    <value>Cappuccino</value>
  </data>
  <data name="MeasureType_CheesseCup" xml:space="preserve">
    <value>Cheese cup</value>
  </data>
  <data name="MeasureType_Espresso" xml:space="preserve">
    <value>Espresso</value>
  </data>
  <data name="MeasureType_Glass100Ml" xml:space="preserve">
    <value>Glass 100 ml</value>
  </data>
  <data name="MeasureType_Glass200Ml" xml:space="preserve">
    <value>Glass 200 ml</value>
  </data>
  <data name="MeasureType_Hickey" xml:space="preserve">
    <value>Piece</value>
  </data>
  <data name="MeasureType_Latte" xml:space="preserve">
    <value>Latte</value>
  </data>
  <data name="MeasureType_Pinch" xml:space="preserve">
    <value>Pinch</value>
  </data>
  <data name="MeasureType_PortionDrink" xml:space="preserve">
    <value>Portion of drink</value>
  </data>
  <data name="MeasureType_PortionForProduct" xml:space="preserve">
    <value>Portion in Pizza/Snack/Sandwich</value>
  </data>
  <data name="MeasureType_PortionIceCream" xml:space="preserve">
    <value>Portion of ice-cream</value>
  </data>
  <data name="MeasureType_PortionNuggets" xml:space="preserve">
    <value>Portion of nuggets</value>
  </data>
  <data name="MeasureType_PortionPotatoes" xml:space="preserve">
    <value>Portion of potatoes</value>
  </data>
  <data name="MeasureType_PortionSalmon" xml:space="preserve">
    <value>Portion of salmon</value>
  </data>
  <data name="MeasureType_PortionShrimp" xml:space="preserve">
    <value>Portion of shrimps</value>
  </data>
  <data name="MeasureType_PressingGun" xml:space="preserve">
    <value>Pushing the pistol</value>
  </data>
  <data name="MeasureType_Shake" xml:space="preserve">
    <value>Shaking</value>
  </data>
  <data name="MeasureType_Slice" xml:space="preserve">
    <value>Slice</value>
  </data>
  <data name="MeasureType_SoupLadle" xml:space="preserve">
    <value>Ladle</value>
  </data>
  <data name="Message_RequiredOrganizationType" xml:space="preserve">
    <value>"Type"</value>
  </data>
  <data name="Message_RequiredPaymentOption" xml:space="preserve">
    <value>Payment terms</value>
  </data>
  <data name="Message_RequiredSupplierName" xml:space="preserve">
    <value>"Name"</value>
  </data>
  <data name="Metr" xml:space="preserve">
    <value>Metre</value>
  </data>
  <data name="MetrShort" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="Milliliter" xml:space="preserve">
    <value>Milliliter</value>
  </data>
  <data name="MilliliterShort" xml:space="preserve">
    <value>Ml.</value>
  </data>
  <data name="MorningShift" xml:space="preserve">
    <value>Morning shift</value>
  </data>
  <data name="NightShift" xml:space="preserve">
    <value>Night shift</value>
  </data>
  <data name="Package" xml:space="preserve">
    <value>Bag</value>
  </data>
  <data name="Packaging" xml:space="preserve">
    <value>Packaging</value>
  </data>
  <data name="Packing" xml:space="preserve">
    <value>Packaging</value>
  </data>
  <data name="PaymentOption_Deferment" xml:space="preserve">
    <value>Deferral</value>
  </data>
  <data name="PaymentOption_Prepaid" xml:space="preserve">
    <value>Advance payment</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Piece</value>
  </data>
  <data name="QuantityShort" xml:space="preserve">
    <value>Piece</value>
  </data>
  <data name="SemiFinishedProduct" xml:space="preserve">
    <value>Prepacked product</value>
  </data>
  <data name="Tara_Bag" xml:space="preserve">
    <value>Sack</value>
  </data>
  <data name="Tara_Balloon" xml:space="preserve">
    <value>Cylinder</value>
  </data>
  <data name="Tara_Bottle" xml:space="preserve">
    <value>Bottle</value>
  </data>
  <data name="Tara_Box" xml:space="preserve">
    <value>Box</value>
  </data>
  <data name="Tara_Bucket" xml:space="preserve">
    <value>Bucket</value>
  </data>
  <data name="Tara_CuppingGlass" xml:space="preserve">
    <value>Can</value>
  </data>
  <data name="Tara_Kega" xml:space="preserve">
    <value>Keg</value>
  </data>
  <data name="Tara_Packing" xml:space="preserve">
    <value>Packaging</value>
  </data>
  <data name="Tara_Roll" xml:space="preserve">
    <value>Roll</value>
  </data>
  <data name="LayerSauces" xml:space="preserve">
    <value>Sauces</value>
  </data>
  <data name="LayerLevel1" xml:space="preserve">
    <value>Layer 1</value>
  </data>
  <data name="LayerLevel2" xml:space="preserve">
    <value>Layer 2</value>
  </data>
  <data name="LayerLevel3" xml:space="preserve">
    <value>Layer 3</value>
  </data>
  <data name="LayerLevel4" xml:space="preserve">
    <value>Layer 4</value>
  </data>
  <data name="LayerLevel5" xml:space="preserve">
    <value>Layer 5</value>
  </data>
</root>