<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicantCourierType" xml:space="preserve">
    <value>外卖员</value>
  </data>
  <data name="ApplicantKitchenType" xml:space="preserve">
    <value>厨房</value>
  </data>
  <data name="ApplicantSource_AdvertismentSite" xml:space="preserve">
    <value>通告的网站</value>
  </data>
  <data name="ApplicantSource_CityBanner" xml:space="preserve">
    <value>广告条幅在市里</value>
  </data>
  <data name="ApplicantSource_InfoBoard" xml:space="preserve">
    <value>信息站在比萨店</value>
  </data>
  <data name="ApplicantSource_MassMedia" xml:space="preserve">
    <value>传播媒介（电视、广播）</value>
  </data>
  <data name="ApplicantSource_Newspapper" xml:space="preserve">
    <value>报纸</value>
  </data>
  <data name="ApplicantSource_Other" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="ApplicantSource_SocialNetworks" xml:space="preserve">
    <value>社交网站（Vk、脸书）</value>
  </data>
  <data name="ApplicantsStatisticTotalCount" xml:space="preserve">
    <value>一共</value>
  </data>
  <data name="ApplicationStatisticInReserve" xml:space="preserve">
    <value>作预备队</value>
  </data>
  <data name="ApplicationStatisticInWork" xml:space="preserve">
    <value>工作中</value>
  </data>
  <data name="CallDescription" xml:space="preserve">
    <value>回电话</value>
  </data>
  <data name="CallShortDescription" xml:space="preserve">
    <value>回电话</value>
  </data>
  <data name="HiredDescription" xml:space="preserve">
    <value>录用</value>
  </data>
  <data name="MedicalBookShortDescription" xml:space="preserve">
    <value>医疗卡</value>
  </data>
  <data name="NewDescription" xml:space="preserve">
    <value>新的调査表</value>
  </data>
  <data name="NewShortDescription" xml:space="preserve">
    <value>来了</value>
  </data>
  <data name="RedirectDescription" xml:space="preserve">
    <value>重定向</value>
  </data>
  <data name="MedicalBookDescription" xml:space="preserve">
    <value>做一个医疗卡</value>
  </data>
  <data name="RedirectShortDescription" xml:space="preserve">
    <value>重定向</value>
  </data>
  <data name="RejectShortDescription" xml:space="preserve">
    <value>拒单</value>
  </data>
  <data name="ReserveDescription" xml:space="preserve">
    <value>储备</value>
  </data>
  <data name="ReserveShortDescription" xml:space="preserve">
    <value>储备</value>
  </data>
  <data name="UnknownDescription" xml:space="preserve">
    <value>???</value>
  </data>
  <data name="UnknownShortDescription" xml:space="preserve">
    <value>???</value>
  </data>
  <data name="RejectDescription" xml:space="preserve">
    <value>拒单</value>
  </data>
  <data name="InterviewShortDescription" xml:space="preserve">
    <value>面试</value>
  </data>
  <data name="InterviewDescription" xml:space="preserve">
    <value>面试</value>
  </data>
  <data name="ApplicationStatisticOnMedicalExamination" xml:space="preserve">
    <value>通过体检</value>
  </data>
  <data name="ApplicationStatisticReject" xml:space="preserve">
    <value>拒绝了</value>
  </data>
  <data name="ApplicationStatisticTaked" xml:space="preserve">
    <value>已接收</value>
  </data>
  <data name="BadDescription" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="BadShortDescription" xml:space="preserve">
    <value>拒单</value>
  </data>
  <data name="HiredShortDescription" xml:space="preserve">
    <value>已聘请</value>
  </data>
</root>